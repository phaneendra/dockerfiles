version: '3'

volumes:
  src-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${WORKDIR}/src
  web-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${WORKDIR}/www
  app-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${WORKDIR}/build/distribution
  logs-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${WORKDIR}/data/logs
  db-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${WORKDIR}/data/dbdata

services:
  dns:
    container_name: dns
    image: 'andyshinn/dnsmasq'
    restart: 'always'
    ports:
      - "53535:53/tcp"
      - "53535:53/udp"
    cap_add:
      - NET_ADMIN
    command: ["--address=/dev/127.0.0.1"]

  web:
    container_name: web
    build:
      context: ./dockerfiles/nginx
      args:
        http_proxy: ${PROXY_URL}
        https_proxy: ${PROXY_URL}
        proxy_auth: ${PROXY_AUTH}
    restart: 'always'
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - logs-volume:/logs
      - web-volume:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro

  jboss:
    container_name: jboss
    build:
      context: ./dockerfiles/jboss
      args:
        http_proxy: ${PROXY_URL}
        https_proxy: ${PROXY_URL}
        proxy_auth: ${PROXY_AUTH}
    ports:
      - "8080:8080"
      - "9990:9990"
    environment:
      - VIRTUAL_HOST=jboss.dev
    volumes:
      - app-volume:/opt/jboss/standalone/deployments
      - logs-volume:/logs
    depends_on:
      - web

  gradle:
    container_name: gradle
    build:
      context: ./dockerfiles/gradle
      args:
        http_proxy: ${PROXY_URL}
        https_proxy: ${PROXY_URL}
        proxy_auth: ${PROXY_AUTH}
    environment:
      - VIRTUAL_HOST=gradle.dev
    volumes:
      - src-volume:/app/src
      - ./build.gradle:/app/build.gradle
      - logs-volume:/logs

  db:
    container_name: mysql
    image: mysql:5.6.36
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
        - db-volume:/var/lib/mysql

  node:
    container_name: nodejs
    build:
      context: ./dockerfiles/nodejs
      args:
        http_proxy: ${PROXY_URL}
        https_proxy: ${PROXY_URL}
        proxy_auth: ${PROXY_AUTH}
    ports:
      - "3000:3000"
    environment:
      - VIRTUAL_HOST=nodejs.dev
      - NODE_ENV=production
    volumes:
      - src-volume:/app/src
      - logs-volume:/logs
    depends_on:
      - web
      - dns